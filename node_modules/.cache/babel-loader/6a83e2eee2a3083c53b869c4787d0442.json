{"ast":null,"code":"import React,{useEffect}from\"react\";import Box from\"@material-ui/core/Box\";import Button from\"@material-ui/core/Button\";import Typography from\"@material-ui/core/Typography\";import Modal from\"@material-ui/core/Modal\";import{useContext}from\"react\";import TextField from\"@material-ui/core/TextField\";import MenuItem from\"@material-ui/core/MenuItem\";import{CtnMargin,CtnCloseBtn}from\"./styled\";import CloseIcon from\"@material-ui/icons/Close\";import IconButton from\"@material-ui/core/IconButton\";import{GlobalStateContext}from\"../Global/GlobalStateContext\";var quantities=[{value:1},{value:2},{value:3},{value:4},{value:5},{value:6},{value:7},{value:8},{value:9},{value:10},{value:11},{value:12},{value:13},{value:14},{value:15}];var ModalQuantityFood=function ModalQuantityFood(_ref){var product=_ref.product,quantity=_ref.quantity,addCart=_ref.addCart,onChangeQuantity=_ref.onChangeQuantity;var _useContext=useContext(GlobalStateContext),states=_useContext.states,sets=_useContext.sets;// const handleChange = (event) => {\n//     setQuantity(event.target.value);\n//   };\nvar onCloseModal=function onCloseModal(){sets.setOpenModal(false);};var addToCart=function addToCart(){sets.setOpenModal(false);addCart(product,quantity);};var style={position:\"absolute\",top:\"50%\",left:\"50%\",transform:\"translate(-50%, -50%)\",width:300,bgcolor:\"white\",borderRadius:\"5px\",p:4,textAlign:\"center\",background:\"rgba(0, 0, 0, 0.8)\"};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{open:states.openModal,onClose:onCloseModal,\"aria-labelledby\":\"modal-modal-title\",\"aria-describedby\":\"modal-modal-description\",BackdropProps:{style:{background:\"rgba(0, 0, 0, 0.4)\",opacity:\"0.2\"}}},/*#__PURE__*/React.createElement(Box,{sx:style},/*#__PURE__*/React.createElement(CtnCloseBtn,null,/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"close\",onClick:onCloseModal},/*#__PURE__*/React.createElement(CloseIcon,null))),/*#__PURE__*/React.createElement(Typography,{id:\"modal-modal-title\",variant:\"h6\",component:\"h2\",sx:{mb:5}},\"Selecione a quantidade desejada\"),/*#__PURE__*/React.createElement(CtnMargin,null,/*#__PURE__*/React.createElement(TextField,{select:true,label:\"Quantidade\",value:quantity,onChange:onChangeQuantity,fullWidth:true,id:\"outlined-select-currency-native\",variant:\"outlined\",required:true},quantities.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option.value,value:option.value},option.value);}))),/*#__PURE__*/React.createElement(CtnCloseBtn,null,/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:function onClick(){return addCart(product,quantity);}},\"Adicionar ao carrinho\")))));};export default ModalQuantityFood;","map":{"version":3,"sources":["/home/fillipecorreia/Desktop/LabeFood/Vaughan-labe-food5/src/components/ModalQuantityFood/ModalQuantityFood.js"],"names":["React","useEffect","Box","Button","Typography","Modal","useContext","TextField","MenuItem","CtnMargin","CtnCloseBtn","CloseIcon","IconButton","GlobalStateContext","quantities","value","ModalQuantityFood","product","quantity","addCart","onChangeQuantity","states","sets","onCloseModal","setOpenModal","addToCart","style","position","top","left","transform","width","bgcolor","borderRadius","p","textAlign","background","openModal","opacity","mb","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {  useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { CtnMargin, CtnCloseBtn } from \"./styled\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { GlobalStateContext } from \"../Global/GlobalStateContext\";\n\nconst quantities = [\n  {\n    value: 1,\n  },\n  {\n    value: 2,\n  },\n  {\n    value: 3,\n  },\n  {\n    value: 4,\n  },\n  {\n    value: 5,\n  },\n  {\n    value: 6,\n  },\n  {\n    value: 7,\n  },\n  {\n    value: 8,\n  },\n  {\n    value: 9,\n  },\n  {\n    value: 10,\n  },\n  {\n    value: 11,\n  },\n  {\n    value: 12,\n  },\n  {\n    value: 13,\n  },\n  {\n    value: 14,\n  },\n  {\n    value: 15,\n  },\n];\n\nconst ModalQuantityFood = ({\n  product,\n  quantity,\n  addCart,\n  onChangeQuantity,\n}) => {\n  const { states, sets } = useContext(GlobalStateContext);\n  \n\n  // const handleChange = (event) => {\n  //     setQuantity(event.target.value);\n  //   };\nconst onCloseModal = () => {\n  sets.setOpenModal(false)\n}\n\n  const addToCart = () => {\n  sets.setOpenModal(false)\n\n    addCart(\n      product, quantity\n    )\n  };\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 300,\n    bgcolor: \"white\",\n    borderRadius: \"5px\",\n    p: 4,\n    textAlign: \"center\",\n    background: \"rgba(0, 0, 0, 0.8)\",\n  };\n\n  return (\n    <div>\n      <Modal\n        open={states.openModal}\n        onClose={onCloseModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        BackdropProps={{\n          style: { background: \"rgba(0, 0, 0, 0.4)\", opacity: \"0.2\" },\n        }}\n      >\n        <Box sx={style}>\n          <CtnCloseBtn>\n            <IconButton aria-label=\"close\" onClick={onCloseModal}>\n              <CloseIcon />\n            </IconButton>\n          </CtnCloseBtn>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{ mb: 5 }}\n          >\n            Selecione a quantidade desejada\n          </Typography>\n          <CtnMargin>\n            <TextField\n              select\n              label=\"Quantidade\"\n              value={quantity}\n              onChange={onChangeQuantity}\n              fullWidth\n              id=\"outlined-select-currency-native\"\n              variant=\"outlined\"\n              required\n            >\n              {quantities.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.value}\n                </MenuItem>\n              ))}\n            </TextField>\n          </CtnMargin>\n          <CtnCloseBtn>\n            <Button color=\"secondary\" onClick={() => addCart(product, quantity)}>\n              Adicionar ao carrinho\n            </Button>\n          </CtnCloseBtn>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalQuantityFood;\n"]},"metadata":{},"sourceType":"module"}