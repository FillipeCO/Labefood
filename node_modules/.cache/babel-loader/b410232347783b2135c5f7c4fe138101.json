{"ast":null,"code":"var _jsxFileName = \"/home/fillipecorreia/Desktop/LabeFood/Vaughan-labe-food5/src/components/Global/CtxCart.js\";\nimport React, { useContext, createContext, useState } from \"react\";\nconst CartCtx = createContext();\nexport default function CartProvider({\n  children\n}) {\n  const [products, setProducts] = useState([]);\n  const [payment, setPayment] = useState(\"\");\n  const [shipping, setShipping] = useState([]);\n  return /*#__PURE__*/React.createElement(CartCtx.Provider, {\n    value: {\n      products,\n      setProducts,\n      payment,\n      setPayment,\n      shipping,\n      setShipping\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport const useCartCtx = () => {\n  const context = useContext(CartCtx);\n  const {\n    products,\n    setProducts,\n    payment,\n    setPayment,\n    shipping,\n    setShipping\n  } = context;\n\n  const addCart = newPdt => {\n    const exists = () => {\n      let res = false;\n\n      for (const pdt of products) {\n        if (pdt.id === newPdt.id) {\n          res = true;\n          break;\n        }\n      }\n\n      return res;\n    };\n\n    if (exists()) {\n      const newArray = products.map(pdt => {\n        if (pdt.id === newPdt.id) {\n          const pdtChanged = { ...pdt,\n            quantity: pdt.quantity += newPdt.quantity\n          };\n          return pdtChanged;\n        } else {\n          return pdt;\n        }\n      });\n      setProducts(newArray);\n    } else {\n      setProducts([...products, newPdt]);\n    }\n  };\n\n  const addShipping = restaurant => {\n    const exists = () => {\n      let res = false;\n\n      for (const item of shipping) {\n        if (item.id === restaurant.id) {\n          res = true;\n          break;\n        }\n      }\n\n      return res;\n    };\n\n    if (!exists()) {\n      setShipping([...shipping, {\n        id: restaurant.id,\n        shipping: restaurant.shipping\n      }]);\n    }\n\n    console.log(shipping);\n  };\n\n  return {\n    products,\n    setProducts,\n    payment,\n    setPayment,\n    shipping,\n    setShipping,\n    addCart,\n    addShipping\n  };\n};","map":{"version":3,"sources":["/home/fillipecorreia/Desktop/LabeFood/Vaughan-labe-food5/src/components/Global/CtxCart.js"],"names":["React","useContext","createContext","useState","CartCtx","CartProvider","children","products","setProducts","payment","setPayment","shipping","setShipping","useCartCtx","context","addCart","newPdt","exists","res","pdt","id","newArray","map","pdtChanged","quantity","addShipping","restaurant","item","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, createContext, useState } from \"react\";\n\nconst CartCtx = createContext();\n\nexport default function CartProvider({ children }) {\n  const [products, setProducts] = useState([]);\n  const [payment, setPayment] = useState(\"\");\n  const [shipping, setShipping] = useState([]);\n  return (\n    <CartCtx.Provider\n      value={{\n        products,\n        setProducts,\n        payment,\n        setPayment,\n        shipping,\n        setShipping,\n      }}\n    >\n      {children}\n    </CartCtx.Provider>\n  );\n}\n\nexport const useCartCtx = () => {\n  const context = useContext(CartCtx);\n  const {\n    products,\n    setProducts,\n    payment,\n    setPayment,\n    shipping,\n    setShipping,\n  } = context;\n\n  const addCart = (newPdt) => {\n    const exists = () => {\n      let res = false;\n      for (const pdt of products) {\n        if (pdt.id === newPdt.id) {\n          res = true;\n          break;\n        }\n      }\n      return res;\n    };\n\n    if (exists()) {\n      const newArray = products.map((pdt) => {\n        if (pdt.id === newPdt.id) {\n          const pdtChanged = {\n            ...pdt,\n            quantity: (pdt.quantity += newPdt.quantity),\n          };\n          return pdtChanged;\n        } else {\n          return pdt;\n        }\n      });\n      setProducts(newArray);\n    } else {\n      setProducts([...products, newPdt]);\n    }\n  };\n\n  const addShipping = (restaurant) => {\n    const exists = () => {\n      let res = false;\n      for (const item of shipping) {\n        if (item.id === restaurant.id) {\n          res = true;\n          break;\n        }\n      }\n      return res;\n    };\n\n    if (!exists()) {\n      setShipping([\n        ...shipping,\n        { id: restaurant.id, shipping: restaurant.shipping },\n      ]);\n    }\n\n    console.log(shipping);\n  };\n\n  return {\n    products,\n    setProducts,\n    payment,\n    setPayment,\n    shipping,\n    setShipping,\n    addCart,\n    addShipping\n  };\n};"]},"metadata":{},"sourceType":"module"}